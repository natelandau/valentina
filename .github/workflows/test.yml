---
name: "Tests"

on:
    workflow_dispatch:
    push:
        paths:
            - ".github/workflows/test.yml"
            - ".github/workflows/reusable-tests.yml"
            - ".github/actions/**"
            - "**.py"
            - "pyproject.toml"
            - "uv.lock"
            - "Dockerfile"
            - "compose.yml"
        branches:
            - main
    pull_request:
        types:
            - opened
            - reopened
            - synchronize
        paths:
            - ".github/workflows/test.yml"
            - ".github/workflows/reusable-tests.yml"
            - ".github/actions/**"
            - "**.py"
            - "pyproject.toml"
            - "uv.lock"
            - "Dockerfile"
            - "compose.yml"

concurrency:
    group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
    cancel-in-progress: true

jobs:
    run-tests:
        if: ${{ !contains(github.event.head_commit.message, 'bump(release)') }}
        uses: ./.github/workflows/reusable-tests.yml
        secrets: inherit
        with:
            run-coverage: true

    test-build-container:
        if: ${{ !contains(github.event.head_commit.message, 'bump(release)') }}
        runs-on: ubuntu-latest
        needs: run-tests
        permissions:
            contents: write
        steps:
            - name: Checkout repository
              uses: actions/checkout@v5
              with:
                  fetch-depth: 2 # Need at least 2 commits to compare

            - name: Check if Dockerfile changed
              id: dockerfile-changes
              run: |
                  if git diff --name-only HEAD~1 HEAD | grep -q "^Dockerfile$"; then
                    echo "dockerfile=true" >> $GITHUB_OUTPUT
                  else
                    echo "dockerfile=false" >> $GITHUB_OUTPUT
                  fi

            - name: Set up QEMU
              if: steps.dockerfile-changes.outputs.dockerfile == 'true'
              uses: docker/setup-qemu-action@v3

            - name: Set up Docker Buildx
              if: steps.dockerfile-changes.outputs.dockerfile == 'true'
              uses: docker/setup-buildx-action@v3

            - name: Build multi-arch Docker image
              if: steps.dockerfile-changes.outputs.dockerfile == 'true'
              uses: docker/build-push-action@v6
              with:
                  context: .
                  platforms: linux/amd64,linux/arm64
                  outputs: type=cacheonly
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
                  tags: user/app:latest
