---
name: "Reusable Tests"

on:
    workflow_call:
        inputs:
            run-coverage:
                description: "Run coverage"
                required: false
                type: boolean
                default: false

env:
    VALENTINA_LOG_FILE: "/tmp/valentina.log"
    VALENTINA_TEST_MONGO_URI: "mongodb://localhost:27017"
    VALENTINA_TEST_MONGO_DATABASE_NAME: "valentina-test"
    VALENTINA_MONGO_URI: "mongodb://localhost:27017"
    VALENTINA_MONGO_DATABASE_NAME: "valentina-ci"
    VALENTINA_DISCORD_TOKEN: ""
    VALENTINA_GUILDS: ""
    VALENTINA_OWNER_CHANNELS: ""

jobs:
    test-python-code:
        runs-on: ubuntu-latest
        strategy:
            fail-fast: true
            matrix:
                python-version: ["3.13"]
        steps:
            - name: Checkout repository
              uses: actions/checkout@v5

            - name: Setup Python, uv, and the package
              uses: ./.github/actions/setup_python_env
              with:
                  python-version: ${{ matrix.python-version }}

            # - name: Start MongoDB
            #   uses: supercharge/mongodb-github-action@1.12.0
            #   with:
            #       mongodb-version: "8.0"

            - name: Run tests
              shell: bash
              run: uv run duty test

            - name: Upload coverage to Codecov
              if: ${{ inputs.run-coverage && matrix.python-version == '3.13' }}
              uses: codecov/codecov-action@v5
              with:
                  files: .cache/coverage.xml
              env:
                  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

    lint-project:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v5

            - uses: actions/cache@v4
              with:
                  path: ~/.cache/pre-commit
                  key: pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}

            - name: Setup Python, uv, and the package
              uses: ./.github/actions/setup_python_env

            - name: run all linters
              shell: bash
              run: uv run duty lint
