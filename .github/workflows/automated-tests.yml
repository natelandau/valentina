---
name: "Automated Tests"

on:
    workflow_call:
    workflow_dispatch:
    push:
        paths:
            - ".github/workflows/automated-tests.yml"
            - ".github/actions/**"
            - "**.py"
            - "pyproject.toml"
            - "uv.lock"
        branches:
            - main
    pull_request:
        types:
            - opened
            - reopened
            - synchronize
        paths:
            - ".github/workflows/automated-tests.yml"
            - ".github/actions/**"
            - "**.py"
            - "pyproject.toml"
            - "uv.lock"

env:
    VALENTINA_LOG_FILE: "/tmp/valentina.log"
    VALENTINA_TEST_MONGO_URI: "mongodb://localhost:27017"
    VALENTINA_TEST_MONGO_DATABASE_NAME: "valentina-test"
    VALENTINA_MONGO_URI: ""
    VALENTINA_MONGO_DATABASE_NAME: ""
    VALENTINA_DISCORD_TOKEN: ""
    VALENTINA_GUILDS: ""
    VALENTINA_OWNER_CHANNELS: ""

concurrency:
    group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
    cancel-in-progress: true

jobs:
    test-python-code:
        runs-on: ubuntu-latest
        strategy:
            fail-fast: true
            matrix:
                python-version: ["3.13"]
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Start MongoDB
              uses: supercharge/mongodb-github-action@1.12.0
              with:
                  mongodb-version: "8.0"

            - name: Setup Python, uv, and the package
              uses: ./.github/actions/uv-python-package

            # ----------------------------------------------
            # Run tests
            # ----------------------------------------------

            - name: lint with ruff
              shell: bash
              run: uv run ruff check --no-fix src/

            - name: mypy
              shell: bash
              run: uv run mypy --config-file pyproject.toml src/

            - name: Run tests
              shell: bash
              run: uv run duty test

            - name: Upload coverage
              if: ${{ matrix.python-version == '3.13' }}
              uses: codecov/codecov-action@v5
              with:
                  files: .cache/coverage.xml
              env:
                  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
